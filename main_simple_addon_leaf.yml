---
- name: Setup which applies to agents and the cluster
  hosts:
    - teleport-node-agentless-1
  vars:
    teleport_semaphore_auth_host: teleport-node-agentless-1
    teleport_semaphore_auth_host_type: node
    domain_name: teleport-leaf1.kaurin.cc
    root_domain_name: teleport.kaurin.cc
  roles:
    - util_common
    - teleport_install
    - teleport
    - teleport_rbac_bootstrap
  tasks:
    - name: Register teleport cluster file
      register: file_teleport_cluster
      ansible.builtin.stat:
        path: /root/trusted_cluster.yaml

    - name: If trusted cluster file does not exist
      when: not file_teleport_cluster.stat.exists
      block:
        - name: Set random token value
          ansible.builtin.set_fact:
            token: "{{ 999999999999999999999999999999999999999999999999999999999999999999 | random | to_uuid }}"

        - name: Issue trusted_cluster token
          changed_when: true
          delegate_to: teleport
          ansible.builtin.command:
            cmd: "tctl tokens add --type=trusted_cluster --value {{ token }}"

        - name: Place trusted_cluster config
          ansible.builtin.copy:
            dest: /root/trusted_cluster.yaml
            mode: "0600"
            owner: root
            group: root
            content: |
              kind: trusted_cluster
              version: v2
              metadata:
                name: {{ domain_name }}
              spec:
                enabled: true
                token: "{{ token }}"
                tunnel_addr: {{ root_domain_name }}:443
                web_proxy_addr: {{ root_domain_name }}:443
                role_map:
                  - remote: "access"
                    local: ["access"]

        - name: Join trusted_cluster
          changed_when: true
          ansible.builtin.command:
            cmd: tctl create /root/trusted_cluster.yaml
