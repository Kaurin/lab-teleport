### TCP Router Approach (more performant)
---
apiVersion: traefik.io/v1alpha1
kind: TLSOption
metadata:
  name: teleport-tls-options
  namespace: teleport-cluster

spec:
  sniStrict: true
  preferServerCipherSuites: true
  # alpnProtocols can be found here: https://github.com/gravitational/teleport/blob/0212ee673014becb7ab43b2aad0dc0712b71cd12/api/constants/constants.go#L291
  alpnProtocols:
    - h2
    - http/1.1
    - teleport-transport
    - teleport-transport-dial
    - "teleport-auth@"
    - teleport-reversetunnel
    - teleport-proxy-ssh
    - "@remote-auth-server"
    - "-ping"
  minVersion: VersionTLS13
  cipherSuites:
    # https://wiki.mozilla.org/Security/Cipher_Suites
    # https://wiki.mozilla.org/Security/Server_Side_TLS
    - TLS_AES_256_GCM_SHA384 # TLS 1.3
    - TLS_CHACHA20_POLY1305_SHA256 # TLS 1.3
  curvePreferences:
    - X25519
    # - prime256v1 # Not sure how to get this working
    - secp384r1

---
apiVersion: traefik.io/v1alpha1
kind: IngressRouteTCP
metadata:
  name: teleport-cluster
  namespace: teleport-cluster
spec:
  entryPoints:
    - websecure
  routes:
    - kind: Rule
      match: |
        HostSNIRegexp(`{{ domain_name }}`) ||
        HostSNIRegexp(`^.*\.{{ domain_name }}$`) ||
        HostSNIRegexp(`^.*\.teleport\.cluster\.local`)
      services:
        - name: teleport-cluster
          kind: Service
          port: 443
  tls:
    passthrough: true
    options:
      name: teleport-tls-options
      namespace: teleport-cluster
