- name: Renew the cert
  delegate_to: 127.0.0.1
  connection: local
  run_once: true
  changed_when: true
  environment:
    CLOUDFLARE_EMAIL: "{{ e_mail }}"
    CLOUDFLARE_DNS_API_TOKEN: "{{ lookup('ansible.builtin.file', playbook_dir + '/token.txt') }}"
  ansible.builtin.command:
    cmd: >
      lego
          --server "{{ letsencrypt_env[letsencrypt_env_choice] }}"
          --email "{{ e_mail }}"
          --path "{{ lego_path_local }}"
          --dns cloudflare
          --domains '*.{{ domain_name }}'
          renew --days 10

- name: Create cert dir
  ansible.builtin.file:
    path: "{{ lego_path }}"
    state: directory
    mode: "0700"

- name: Drop the cert/key off
  vars:
    lego_file_mapping:
      - local_file: "{{ lego_path_local }}/certificates/_.{{ domain_name }}.crt"
        remote_file: "{{ lego_path }}/{{ domain_name }}.crt"
      - local_file: "{{ lego_path_local }}/certificates/_.{{ domain_name }}.key"
        remote_file: "{{ lego_path }}/{{ domain_name }}.key"
  loop: "{{ lego_file_mapping }}"
  ansible.builtin.copy:
    src: "{{ item.local_file }}"
    dest: "{{ item.remote_file }}"
    mode: "0600"

- name: Copy teleport config
  ansible.builtin.template:
    src: teleport.yaml.j2
    dest: /etc/teleport.yaml
    mode: "0600"

- name: Enable and start teleport
  ansible.builtin.systemd:
    name: teleport
    state: started
    enabled: true
    daemon_reload: true

- name: Wait until teleport is ready
  changed_when: false
  register: teleport_status
  until: teleport_status.rc == 0
  retries: 10
  delay: 2
  ansible.builtin.command: tctl status
