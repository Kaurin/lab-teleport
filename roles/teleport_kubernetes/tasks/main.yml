- name: Stat the k3s config file
  register: k3s_config
  ansible.builtin.stat:
    path: /etc/rancher/k3s/k3s.yaml

- name: If teleport config does not exist
  when: not k3s_config.stat.exists
  block:
    - name: Install k3s # noqa: command-instead-of-module
      changed_when: true
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          curl -sfL https://get.k3s.io | sh -

    - name: Issue kubernetes token
      changed_when: true
      delegate_to: teleport
      register: enroll_kube_stdout
      ansible.builtin.command:
        cmd: tctl tokens add --type=node,kube --format=text

    - name: Place kube token file
      changed_when: true
      ansible.builtin.copy:
        dest: /etc/teleport_kube.token
        content: "{{ enroll_kube_stdout.stdout }}"
        mode: "0600"
        owner: root
        group: root

    - name: Place token file
      changed_when: true
      ansible.builtin.copy:
        dest: /etc/teleport.token
        content: "{{ enroll_kube_stdout.stdout }}"
        mode: "0600"
        owner: root
        group: root

    - name: Join node
      changed_when: true
      ansible.builtin.command:
        cmd: >
          teleport node configure
            --output=file:///etc/teleport.yaml
            --token=/etc/teleport.token
            --proxy={{ domain_name }}:443

    - name: Configure teleport
      ansible.builtin.blockinfile:
        path: /etc/teleport.yaml
        mode: "0600"
        block: |
          kubernetes_service:
            enabled: "yes"
            resources:
            - labels:
                "*": "*"

- name: Start the teleport service
  ansible.builtin.systemd:
    daemon_reload: true
    name: teleport
    enabled: true
    state: started

- name: Stat kubeconfig
  register: stat_kubeconfig
  ansible.builtin.stat:
    path: /root/kubeconfig

- name: If kubeconfig does not exist
  when: not stat_kubeconfig.stat.exists
  block:
    - name: Get the kubeconfig script
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/gravitational/teleport/{{ teleport_version }}/examples/k8s-auth/get-kubeconfig.sh
        dest: /root/get-kubeconfig.sh
        mode: "0700"

    - name: Run the kubeconfig script
      changed_when: true
      ansible.builtin.command:
        chdir: /root
        cmd: /root/get-kubeconfig.sh

    - name: Slurp kubeconfig
      register: slurp_kubeconfig
      ansible.builtin.slurp:
        src: /root/kubeconfig

- name: Stat kube_cluster on teleport
  delegate_to: teleport
  register: stat_kube_cluster
  ansible.builtin.stat:
    path: /root/kube_cluster.yaml

- name: If kube_cluster.yaml does not exist
  when: not stat_kube_cluster.stat.exists
  block:
    - name: Create kube_cluster.yaml
      delegate_to: teleport
      ansible.builtin.copy:
        dest: /root/kube_cluster.yaml
        mode: "0600"
        content: |
          kind: kube_cluster
          version: v3
          metadata:
            name: mycluster
          spec:
            kubeconfig: {{ slurp_kubeconfig.content }}

    - name: Apply kube_cluster.yaml
      delegate_to: teleport
      changed_when: true
      ansible.builtin.command:
        cmd: tctl create /root/kube_cluster.yaml
