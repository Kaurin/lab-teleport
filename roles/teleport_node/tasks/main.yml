---
- name: Stat the teleport token file
  register: teleport_token_file
  ansible.builtin.stat:
    path: /etc/teleport.yaml

- name: If teleport token file does not exist
  when: not teleport_token_file.stat.exists
  block:
    - name: Enable the SSH service on agentless nodes
      when: node_is_agentless
      ansible.builtin.service:
        name: ssh
        enabled: true
        state: started

    - name: Set random token value
      ansible.builtin.set_fact:
        token: "{{ 999999999999999999999999999999999999999999999999999999999999999999 | random | to_uuid }}"

    - name: Issue node token
      changed_when: true
      delegate_to: teleport
      ansible.builtin.command:
        cmd: "tctl tokens add --type=node --value {{ token }}"

    - name: Place token file
      ansible.builtin.copy:
        dest: /etc/teleport.token
        content: "{{ token }}"
        mode: "0600"
        owner: root
        group: root

    - name: Join node (Agent)
      changed_when: true
      when: not node_is_agentless
      notify: Restart Teleport # teleport_lib role required in play
      ansible.builtin.command:
        cmd: >
          teleport node configure
            --output file:///etc/teleport.yaml
            --token /etc/teleport.token
            --proxy {{ domain_name }}:443
            --labels hostname={{ inventory_hostname }}

    - name: Join node (Agentless)
      changed_when: true
      when: node_is_agentless
      ansible.builtin.command:
        cmd: >
          teleport join openssh
            --token /etc/teleport.token
            --proxy-server {{ domain_name }}:443
            --address {{ inventory_hostname }}.{{ domain_name }}:22
            --labels hostname={{ inventory_hostname }}

# TODO, use ansible `blockinfile` to add-on to the existing config if needed
