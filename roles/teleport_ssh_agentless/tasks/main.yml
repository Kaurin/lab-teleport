---
- name: Include the teleport_semaphore role
  ansible.builtin.include_role:
    name: teleport_semaphore

- name: Check if we already signed the node
  delegate_to: teleport
  register: auth_signed_file
  ansible.builtin.stat:
    path: "/root/{{ ansible_hostname }}-ident"

- name: Wait for Teleport to become ready
  ansible.builtin.include_role:
    name: util_wait_teleport_ready

- name: Tasks if node nod signed previously
  when: not auth_signed_file.stat.exists
  block:

    # Don't merge this block with the previous `block`. We need to step out back to the previous `block` later
    - name: Block for items needed to be performed on the cluster
      delegate_to: "{{ teleport_executor }}"
      block:
        - name: Set random name value
          ansible.builtin.set_fact:
            agentless_name_uuid: "{{ 999999999999999999999999999999999999999999999999999999999999999999 | random | to_uuid | lower }}"

        - name: Template out the agentless node object
          ansible.builtin.template:
            src: node_agentless.yaml.j2
            dest: "/root/{{ ansible_hostname }}.yaml"
            mode: "0600"
            owner: root

        - name: Create the node object and sign it (kube or node teleport cluster)
          ansible.builtin.include_tasks:
            file: "auth-sign-{{ teleport_semaphore_auth_host_type }}.yml"

        - name: Slurp the Key
          no_log: true
          register: agentless_slurped_key
          ansible.builtin.slurp:
            src: "/root/{{ ansible_hostname }}-ident"

        - name: Slurp the Cert
          no_log: true
          register: agentless_slurped_cert
          ansible.builtin.slurp:
            src: "/root/{{ ansible_hostname }}-ident-cert.pub"


    # Stepping back to the agentless host
    - name: Place the key
      no_log: true
      ansible.builtin.copy:
        dest: "/etc/ssh/{{ ansible_hostname }}-ident"
        mode: "0600"
        owner: root
        content: "{{ agentless_slurped_key.content | b64decode }}"

    - name: Place the cert
      no_log: true
      ansible.builtin.copy:
        dest: "/etc/ssh/{{ ansible_hostname }}-ident-cert.pub"
        mode: "0600"
        owner: root
        content: "{{ agentless_slurped_cert.content | b64decode }}"

    - name: Modify the SSH config to include the auth signed HostKey
      notify: Restart SSH daemon # Requires teleport_lib
      ansible.builtin.lineinfile:
        path: "/etc/ssh/sshd_config"
        regexp: '^HostKey'
        line: "HostKey /etc/ssh/{{ ansible_hostname }}-ident"

    - name: Modify the SSH config to include the auth signed HostCertificate
      notify: Restart SSH daemon # Requires teleport_lib
      ansible.builtin.lineinfile:
        path: "/etc/ssh/sshd_config"
        regexp: '^HostCertificate'
        line: "HostCertificate /etc/ssh/{{ ansible_hostname }}-ident-cert.pub"

    - name: Get the SSH CA from our cluster
      ansible.builtin.copy:
        dest: /etc/ssh/teleport_openssh_ca.pub
        content: "{{ lookup('ansible.builtin.url', 'https://' + domain_name + '/webapi/auth/export?type=openssh') | regex_replace('^cert-authority ', '') }}"
        mode: "0644"
        owner: root

    - name: Configure SSHD to trust the Teleport Cluster CA
      notify: Restart SSH daemon # Requires teleport_lib role
      ansible.builtin.lineinfile:
        path: "/etc/ssh/sshd_config"
        regexp: "^TrustedUserCAKeys"
        line: "TrustedUserCAKeys /etc/ssh/teleport_openssh_ca.pub"

    - name: Cleanup
      ansible.builtin.include_tasks:
        file: cleanup.yml
